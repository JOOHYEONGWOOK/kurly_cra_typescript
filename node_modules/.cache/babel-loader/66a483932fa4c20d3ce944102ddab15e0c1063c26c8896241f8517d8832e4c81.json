{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\1212_\\uB9AC\\uC561\\uD2B8_CRA_\\uB9C8\\uCF13\\uCEEC\\uB9AC_\\uD68C\\uC6D0\\uAC00\\uC785\\uD3FC_\\uD0C0\\uC785\\uC2A4\\uD06C\\uB9BD\\uD2B8\\\\src\\\\components\\\\WrapComponent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ModalComponent from './ModalComponent';\nimport HeaderComponent from './HeaderComponent';\nimport MainComponent from './MainComponent';\nimport FooterComponent from './FooterComponent';\nimport MemberModalComponent from './MemberModalComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WrapComponent() {\n  _s();\n  const [isModal, setModal] = React.useState(false);\n  const [title, setTitle] = React.useState('');\n  const [isTimerHp, setTimerHp] = React.useState(false);\n\n  // 버튼클릭 해서 상태변수를 바꾼다.\n  // 함수 생성하여 사용 => 자식 컴포넌트에서 \n  // 상위(조상) 컴포넌트의 함수를 호출 실행할 수 있다.\n  // 만약 이런 방법이 없다면 리덕스를 사용한다.\n  // 모달을 오픈(열기) 함수\n  const openModal = msg => {\n    setModal(true); // 모달열기\n    setTitle(msg); // 모달창 메시지(타이틀)\n  };\n\n  // 모달을 클로즈(닫기) 함수\n  const closeModal = z => {\n    setModal(false);\n    setTimerHp(z); //true 타이머 동작 또는 false  타이머 동작 안함\n  };\n\n  // 타이머 동작 초기화 false\n  const timerStopHp = () => {\n    setTimerHp(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(ModalComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(MainComponent, {\n      openModal: openModal,\n      isTimerHp: isTimerHp,\n      timerStopHp: timerStopHp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), isModal && /*#__PURE__*/_jsxDEV(MemberModalComponent, {\n      title: title,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_s(WrapComponent, \"qt5q9OKPsskswccoaz/I+FYj5I0=\");\n_c = WrapComponent;\n;\nexport default WrapComponent;\nvar _c;\n$RefreshReg$(_c, \"WrapComponent\");","map":{"version":3,"names":["React","ModalComponent","HeaderComponent","MainComponent","FooterComponent","MemberModalComponent","WrapComponent","isModal","setModal","useState","title","setTitle","isTimerHp","setTimerHp","openModal","msg","closeModal","z","timerStopHp"],"sources":["C:/Users/user/Desktop/1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트/src/components/WrapComponent.tsx"],"sourcesContent":["import React from 'react';\r\nimport ModalComponent from './ModalComponent';\r\nimport HeaderComponent from './HeaderComponent';\r\nimport MainComponent from './MainComponent';\r\nimport FooterComponent from './FooterComponent';\r\nimport MemberModalComponent from './MemberModalComponent';\r\n\r\n\r\nfunction WrapComponent() {\r\n\r\n   const [isModal, setModal] = React.useState(false);\r\n   const [title, setTitle] = React.useState('');\r\n   const [isTimerHp, setTimerHp] = React.useState(false);\r\n   \r\n   // 버튼클릭 해서 상태변수를 바꾼다.\r\n   // 함수 생성하여 사용 => 자식 컴포넌트에서 \r\n   // 상위(조상) 컴포넌트의 함수를 호출 실행할 수 있다.\r\n   // 만약 이런 방법이 없다면 리덕스를 사용한다.\r\n   // 모달을 오픈(열기) 함수\r\n   const openModal=(msg:any)=>{\r\n      setModal(true); // 모달열기\r\n      setTitle(msg);  // 모달창 메시지(타이틀)\r\n   }\r\n\r\n   // 모달을 클로즈(닫기) 함수\r\n   const closeModal=(z:any)=>{\r\n      setModal(false);\r\n      setTimerHp(z); //true 타이머 동작 또는 false  타이머 동작 안함\r\n   }\r\n\r\n   // 타이머 동작 초기화 false\r\n   const timerStopHp=()=>{\r\n      setTimerHp(false);\r\n   }\r\n\r\n   return (\r\n      <div id=\"wrap\">\r\n         <ModalComponent/> \r\n         <HeaderComponent/>\r\n         <MainComponent openModal={openModal}  isTimerHp={isTimerHp} timerStopHp={timerStopHp}/>\r\n         <FooterComponent/>\r\n         { \r\n            isModal && <MemberModalComponent title={title}  closeModal={closeModal} /> \r\n         }\r\n         \r\n      </div>\r\n   );\r\n};\r\n\r\nexport default WrapComponent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC;AAG1D,SAASC,aAAa,GAAG;EAAA;EAEtB,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,SAAS,EAAEC,UAAU,CAAC,GAAGb,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA;EACA;EACA;EACA;EACA,MAAMK,SAAS,GAAEC,GAAO,IAAG;IACxBP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChBG,QAAQ,CAACI,GAAG,CAAC,CAAC,CAAE;EACnB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAEC,CAAK,IAAG;IACvBT,QAAQ,CAAC,KAAK,CAAC;IACfK,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMC,WAAW,GAAC,MAAI;IACnBL,UAAU,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACG;IAAK,EAAE,EAAC,MAAM;IAAA,wBACX,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eACjB,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAE,eAClB,QAAC,aAAa;MAAC,SAAS,EAAEC,SAAU;MAAE,SAAS,EAAEF,SAAU;MAAC,WAAW,EAAEM;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE,eACvF,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAE,EAEfX,OAAO,iBAAI,QAAC,oBAAoB;MAAC,KAAK,EAAEG,KAAM;MAAE,UAAU,EAAEM;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAG1E;AAEZ;AAAC,GAvCQV,aAAa;AAAA,KAAbA,aAAa;AAuCrB;AAED,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}