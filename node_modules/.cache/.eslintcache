[{"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\index.tsx":"1","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\WrapComponent.tsx":"2","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\ModalComponent.tsx":"3","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\HeaderComponent.tsx":"4","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\MainComponent.tsx":"5","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\MemberModalComponent.tsx":"6","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\FooterComponent.tsx":"7"},{"size":243,"mtime":1670598954000,"results":"8","hashOfConfig":"9"},{"size":1618,"mtime":1670598668000,"results":"10","hashOfConfig":"9"},{"size":504,"mtime":1669638156000,"results":"11","hashOfConfig":"9"},{"size":4456,"mtime":1669638220000,"results":"12","hashOfConfig":"9"},{"size":59647,"mtime":1670840086000,"results":"13","hashOfConfig":"9"},{"size":1081,"mtime":1670600232000,"results":"14","hashOfConfig":"9"},{"size":6292,"mtime":1670594814000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dpxcbr",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\WrapComponent.tsx",[],[],"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\ModalComponent.tsx",[],[],"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\HeaderComponent.tsx",[],[],"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\MainComponent.tsx",["38","39","40","41","42","43"],[],"import React, { ChangeEvent, MouseEvent } from  'react';\r\n\r\n\r\n\r\n// 인터페이스(interface)\r\ninterface MemberTypes {\r\n\r\n   아이디: string,\r\n   아이디중복확인: boolean,  // 블리언(true or false)\r\n   isId: boolean,\r\n\r\n   비밀번호: string,\r\n   isPwText1: boolean,\r\n   isPwText2: boolean,\r\n   isPwText3: boolean,\r\n   비밀번호확인: string,\r\n   isPw2Text1: boolean,\r\n   isPw2Text2: boolean,\r\n\r\n   이름: string,\r\n   isName: boolean,\r\n\r\n   이메일: string,\r\n   isEmailText1: boolean,\r\n   isEmailText2: boolean,\r\n   이메일중복확인: boolean,   // 블리언(true or false)\r\n\r\n   휴대폰: string,\r\n   isHpBtn: boolean,\r\n   isHpBtnDisabled: boolean,\r\n   isHpBtnHide1: boolean,\r\n   isHpBtnHide2: boolean,\r\n   isHpBtnHide3: boolean,\r\n   isHpOkbtnDisabled: boolean,\r\n   isHpGuidText1: boolean,\r\n   isHpGuidText2: boolean,\r\n   인증번호: number,\r\n   인증번호확인입력값: number | string,\r\n   isHpDisabled: boolean,\r\n   분: number,\r\n   초: number,\r\n   isTimerStart: boolean,\r\n   setId: number,\r\n\r\n   주소1: string,\r\n   주소2: string,\r\n   isAddress: boolean,\r\n\r\n   성별: string,\r\n   생년: string,\r\n   생월: string,\r\n   생일: string,\r\n   isBirthGuideText: boolean,\r\n   birthGuideText: string,\r\n\r\n   추가입력사항: string,\r\n   추가입력사항입력상자: string,\r\n   이용약관동의: Array<string>,\r\n   이용약관전체: Array<string>,\r\n\r\n}\r\n\r\nfunction MainComponent({회원관리, openModal, isTimerHp, timerStopHp}: any) {\r\n\r\n   // 상태(state)관리자 아이디 stateId, setStateId 함수 저장관리 => React.useState()\r\n   const [state, setState] = React.useState<MemberTypes>(회원관리);  // 디폴트 프롭스 객체를 상태관리자에 변수에 넣기\r\n   \r\n   const {\r\n            아이디,아이디중복확인,isId, \r\n\r\n            비밀번호,isPwText1,isPwText2,isPwText3, \r\n            비밀번호확인,isPw2Text1,isPw2Text2, \r\n\r\n            이름,isName, \r\n\r\n            이메일,isEmailText1,isEmailText2,이메일중복확인,\r\n            \r\n            휴대폰,isHpBtn,isHpBtnDisabled,\r\n            isHpBtnHide1,isHpBtnHide2,isHpBtnHide3,\r\n            isHpOkbtnDisabled,isHpGuidText1,isHpGuidText2,\r\n            인증번호,인증번호확인입력값,isHpDisabled,분,초,isTimerStart,setId,\r\n\r\n            주소1, 주소2, isAddress,\r\n\r\n            성별,\r\n            생년, 생월, 생일, isBirthGuideText, birthGuideText,\r\n\r\n            추가입력사항, 추가입력사항입력상자, \r\n\r\n            이용약관동의, 이용약관전체\r\n   } = state;\r\n\r\n   //1-1. 아이디 입력상자 : 입력값(value) => 상태관리자변수에저장\r\n    const onChangeId=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      let regExp1: RegExp = /[`~!@#$%^&*()\\-_=+|\\\\\\]}[{'\";:/?.>,<]/g;  // 특수문자\r\n      let regExp2: RegExp = /.{6,16}/g;  // 글자수는 6 ~ 16\r\n      let regExp3: RegExp = /(?=.*[A-Za-z])+(?=.*[0-9])*/g;  // 영문(대소문자) 필수 포함, 숫자 선택 포함 : 영문(?=.*[A-Za-z])+ 또는(혹은) 숫자(?=.*[0-9])*  \r\n      let regExp4: RegExp = /\\s/g;  // 공백문자\r\n      let imsi: string = '';\r\n      let isLogic: boolean = false;\r\n\r\n      // 입력값 비구조화\r\n      const {value} = e.target;\r\n\r\n      // 특수문자 삭제\r\n      imsi = e.target.value.replace(regExp1, '');\r\n\r\n      // 정규표현식 구현\r\n      if( regExp2.test(value) === false  ||  regExp3.test(value) === false || regExp4.test(value) === true ){\r\n         isLogic = true; \r\n      }\r\n      else{\r\n         isLogic = false;        \r\n      }      \r\n      setState({ ...state, 아이디: imsi, isId: isLogic });\r\n    }\r\n\r\n    //1-2. 아이디 중복확인 버튼 클릭 이벤트\r\n    const onClickIdOk=(e: MouseEvent<HTMLButtonElement>)=>{\r\n      let regExp2: RegExp = /.{6,16}/g;  // 글자수는 6 ~ 16\r\n      let regExp3: RegExp = /(?=.*[A-Za-z])+(?=.*[0-9])*/g;  // 영문(대소문자) 필수 포함, 숫자 선택 포함 : 영문(?=.*[A-Za-z])+ 또는(혹은) 숫자(?=.*[0-9])*  \r\n      let regExp4: RegExp = /\\s/g;  // 공백문자\r\n      let isLogic: boolean = false;\r\n      let message: string = '';\r\n\r\n      e.preventDefault();\r\n\r\n     // 정규표현식 구현\r\n     if( regExp2.test(아이디) === false  ||  regExp3.test(아이디) === false || regExp4.test(아이디) === true ){\r\n         isLogic = true; \r\n         message = '6자 이상 16자 이하의 영문 혹은 영문과 숫자를 조합';\r\n      }\r\n      else{\r\n         isLogic = false; \r\n         message = '사용 할 수 있는 아이디 입니다';    \r\n      }  \r\n\r\n      openModal(message);  // 호출한 모달 열기 함수\r\n      setState({ ...state, 아이디중복확인: isLogic });\r\n    }\r\n\r\n    //2. 비밀번호 입력상자\r\n    const onChangePw=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      const regExp1: RegExp = /.{10,}/g;  // isPwText1\r\n      const regExp2: RegExp = /((?=.*[A-Z])+(?=.*[0-9])+)+|((?=.*[A-Z])+(?=.*[`~!@#$%^&*()\\-_=+|\\\\\\]}[{'\";:/?.>,<])+)+|((?=.*[0-9])+(?=.*[`~!@#$%^&*()\\-_=+|\\\\\\]}[{'\";:/?.>,<])+)+/gi;\r\n      const regExp3: RegExp = /\\s/g;    // regExp2 + regExp3 => isPwText2\r\n      const regExp4: RegExp = /(.)\\1\\1/g;  //동일한 글자 연속3번 사용 불가  => isPwText3\r\n      let   imsi1: boolean = false;\r\n      let   imsi2: boolean = false;\r\n      let   imsi3: boolean = false;\r\n      let {value} = e.target;\r\n\r\n         if( value==='' ){\r\n            imsi1 = imsi2 = imsi3 = false;   // imsi1 = false; imsi2 = false; imsi3 = false;\r\n         }\r\n         else{         \r\n            if( regExp1.test(value)===false ){ //10자이상 체크\r\n               imsi1 = true; imsi2 = false; imsi3 = false;\r\n            }\r\n            else if( regExp2.test(value)===false || regExp3.test(value)===true ){  // 조합, 공백문자 조건\r\n               imsi1 = false; imsi2 = true; imsi3 = false;\r\n            }                                         \r\n            else if( regExp4.test(value)===true ){  //연속3자이상조건\r\n               imsi1 = false; imsi2 = false; imsi3 = true;\r\n            }\r\n            else {\r\n               imsi1 = imsi2 = imsi3 = false;\r\n            }        \r\n         }     \r\n\r\n         setState({...state, isPwText1: imsi1, isPwText2: imsi2, isPwText3: imsi3, 비밀번호: value});\r\n\r\n    }\r\n\r\n    //3. 비밀번호 확인 입력상자\r\n    const onChangePw2=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      let {value} = e.target;\r\n      let imsi1: boolean = false;\r\n      let imsi2: boolean = false;\r\n\r\n         if( value==='' ){\r\n            imsi1 = true; imsi2 = false;\r\n         }\r\n         else{\r\n            if( 비밀번호 !== value ){\r\n               imsi1 = false; imsi2 = true;\r\n            }\r\n            else {\r\n               imsi1 = imsi2 = false;\r\n            }\r\n         }\r\n\r\n         setState({ ...state, isPw2Text1: imsi1, isPw2Text2: imsi2, 비밀번호확인: value });\r\n    }\r\n\r\n    //4. 이름 입력상자\r\n    const onChangeName=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      const regExp: RegExp = /[`~!@#$%^&*()\\-_=+|\\\\\\]}[{'\";:/?.>,<]/g;\r\n      let  {value} = e.target;\r\n      let  imsi1: string = '';  //입력값\r\n      let  imsi2: boolean = false //논리값\r\n\r\n         imsi1 = value.replace(regExp, '');  // 특수문자 입력 불가\r\n      \r\n         if( value==='' ){\r\n            imsi2 = true;\r\n         }\r\n         else{\r\n            imsi2 = false;\r\n         }\r\n\r\n         setState({ ...state, 이름: imsi1, isName: imsi2 });\r\n\r\n    }\r\n\r\n    //5-1. 이메일 입력상자\r\n    const onChangeEmail=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      const regExp: RegExp = /^([A-Z0-9]+[^\\s]*)+([._-]?[A-Z0-9]*)@([A-Z0-9]+[^\\s]*)+([._-]?[A-Z0-9]*).[A-Z]{2,3}$/gi;\r\n      let {value} = e.target;\r\n      let imsi1: boolean = false;\r\n      let imsi2: boolean = false;\r\n\r\n         if( value==='' ){\r\n            imsi1 = true; imsi2 = false;\r\n         }\r\n         else{ \r\n            if( regExp.test(value)===false ){\r\n               imsi1 = false; imsi2 = true;\r\n            }\r\n            else{\r\n               imsi1 = imsi2 = false;\r\n            }            \r\n         }\r\n         setState({ ...state, 이메일: value, isEmailText1: imsi1, isEmailText2: imsi2 });\r\n\r\n    }\r\n    \r\n    //5-2. 이메일 중복확인 버튼 클릭 이벤트\r\n    const onClickEmailOk=(e: MouseEvent<HTMLButtonElement>)=>{\r\n         e.preventDefault();\r\n         const regExp: RegExp       = /^([A-Z0-9]+[^\\s]*)+([._-]?[A-Z0-9]*)@([A-Z0-9]+[^\\s]*)+([._-]?[A-Z0-9]*).[A-Z]{2,3}$/gi;\r\n         let imsi: Array<any>       = [];\r\n         let result: Array<boolean> = [];\r\n         let isEmail: boolean       = false;\r\n\r\n         if( 이메일==='' ){\r\n            openModal(`이메일을 입력하세요.`); // 모달창 열고, 내용 전달           \r\n         }\r\n         else{\r\n            if( regExp.test(이메일)===false ){\r\n               openModal(`이메일 형식으로 입력하세요.`);\r\n            }\r\n            else{            \r\n               // 이메일 중복확인 체크 시작              \r\n               // 로컬스토레이지 키(key) : KurlyMember\r\n               // 데이터베이스 사용시 로컬스토레이지 사용 안함.\r\n               if( localStorage.getItem('KurlyMember')===null ){\r\n                  return;\r\n               }\r\n               try{\r\n                  imsi = [...imsi,  JSON.parse( localStorage.getItem('KurlyMember') || \"{}\" ) ];\r\n               }\r\n               catch{\r\n                  console.log( '데이터가 JSON 형식이 아닙니다.' );\r\n                  return;\r\n               }\r\n               \r\n               result = imsi.map((item)=>item.이메일 === 이메일 );\r\n   \r\n\r\n               if( result.includes(true) ){\r\n                  openModal(`중복된 이메일 입니다.`);                     \r\n                  isEmail = false;\r\n               }\r\n               else {\r\n                  openModal(`사용 가능한 이메일 입니다.`);   \r\n                  isEmail = true;\r\n               }\r\n            }            \r\n         }  \r\n                             \r\n         setState({ ...state, 이메일중복확인: isEmail });\r\n        \r\n    }\r\n\r\n\r\n\r\n    //6-1. 휴대폰 입력상자\r\n    const onChangeHp=(e: ChangeEvent<HTMLInputElement>)=>{\r\n\r\n      const regExp = /[`~!@#$%^&*()\\-_=+|\\\\\\]}[{'\";:/?.>,<]/g;      \r\n      let {value} = e.target;\r\n      let imsi1 = '';\r\n      let imsi2 = false; // addClass('on')  => 프롭스의 기본값\r\n      let imsi3 = true;  // disabled = true  => 프롭스의 기본값\r\n\r\n      // 특수문자는 삭제\r\n      imsi1 = value.replace(regExp,'');\r\n\r\n      // 휴대폰 입력상자에 10자 이상 입력하면 \r\n      // 인증번호 버튼이 on 클래스가 추가되어 보라색 버튼으로 변한다.\r\n      // 인증번호 버튼이 disabled=true 인데 disabled=false로 변경된다. 사용가능한 버튼상태\r\n      if( value.length>=10 ){\r\n         imsi2 = true;\r\n         imsi3 = false;\r\n      }\r\n      else {\r\n         imsi2 = false;\r\n         imsi3 = true;\r\n      }         \r\n      setState({ \r\n         ...state, \r\n         휴대폰: imsi1, \r\n         isHpBtn: imsi2, \r\n         isHpBtnDisabled: imsi3 \r\n      });\r\n    }\r\n\r\n    //6-2-1. 타이머 카운트 함수 \r\n    const timerCount=()=>{\r\n      \r\n      console.log( '타이머동작실행' );\r\n\r\n      let m: number = 2; //분 2\r\n      let s: number = 59; //초(0~59 => 60초)\r\n      let imsi:any = 0;\r\n\r\n      imsi = setInterval(function(){\r\n         s--;\r\n         // console.log( that.회원.setId );               \r\n         if(s<0){ //60초 경고 그러면 1분 감소\r\n            s=59;\r\n            m--;\r\n            if(m<0){\r\n               s=0;\r\n               m=0;\r\n               clearInterval(imsi);\r\n               //isTimerHp = false\r\n               timerStopHp();\r\n               openModal(\"유효 시간이 만료되었습니다.<br>다시 시도해 주세요.\");\r\n               return;\r\n            }\r\n         }\r\n         setState({...state, 분: m, 초: s, setId: imsi });  //1초에 한번씩\r\n\r\n         // console.log(  m );\r\n         // console.log(  s );\r\n         // console.log( '타이머동작실행 imsi ' , imsi ); //88\r\n         // console.log( '타이머동작실행 setId ' , setId ); //88\r\n         // console.log( '인증번호입력박스 isHpBtnHide3 ' , isHpBtnHide3 );\r\n\r\n      }, 1000);\r\n\r\n      // console.log( '타이머동작실행 imsi ' , imsi );\r\n      // console.log( '타이머동작실행 setId ' , setId );\r\n      // console.log( '인증번호입력박스 isHpBtnHide3 ' , isHpBtnHide3 );\r\n    }\r\n    \r\n\r\n    // 유즈 이펙트 훅\r\n    // 휴대폰 인증번호 발송 모달창 닫기 클릭하면\r\n    // 타이머 동작하도록 인증번호 3분 카운트 타이머 동작 실행 시작\r\n    // isTimerHp == true 이면 타이머 동작 시작\r\n    React.useEffect(()=>{\r\n      isTimerHp && timerCount();  //인증번호 입력박스(true)가 열리면 타이머동작 isHpBtnHide3=false 이면  입력박스(true)가 닫고 타이머도 호출 안한다\r\n   //  });  // 로딩시 실행 하는데 렌더링이 될때마다 무한반복 실행한다.\r\n   //  },[]);  // 로딩시 1회 실행 하고 종료  : isHpBtnHide3 false 이기때문에 실행 할 게 없다.\r\n    },[isTimerHp]); // 인증번호 입력박스가 열리면  isHpBtnHide3 true 이거나 false 변화가 있을 때(렌더링) 1회만 실행하게 한다. 무한반복을 막는다.\r\n\r\n\r\n    //6-2-2. 휴대폰 인증 번호 클릭 이벤트 => 인증번호 발송\r\n    const onClickHpBtn=(e: MouseEvent<HTMLButtonElement>)=>{\r\n      e.preventDefault();\r\n      const regExp: RegExp = /^01[0|1|6|7|8|9]+[0-9]{3,4}[0-9]{4}$/g;  // 휴대폰 010, 011, 016, 017, 018, 019\r\n      let imsi1: boolean = false; // 인증번호 버튼 보인다. && 다른인증번호 버튼은 숨긴다.\r\n      let imsi2: boolean = false; // 휴대폰 번호 형식으로 입력해 주세요. 정규표현식 \r\n      let num: number = 0;  // 인증번호\r\n\r\n      if( regExp.test(휴대폰)===false ){\r\n         imsi1 = false; // 인증번호확인 입력상자 안보인다.\r\n         imsi2 = true;  // 오류가 있으면\r\n\r\n      }\r\n      else{\r\n         imsi1 = true;   // 인증번호확인 입력상자 보인다.\r\n         imsi2 = false;  // 오류가 없으면\r\n         num = Math.floor( Math.random()*900000+100000 ); // 수학객체 0 ~ 1 랜덤함수 0.6863693958147086\r\n                  \r\n         openModal(`인증번호가 발송되었습니다. ${num}`);         \r\n      }\r\n\r\n      setState({ \r\n         ...state, \r\n         isHpBtnHide3: imsi1,  //박스보이기\r\n         isHpGuidText2: imsi2,         \r\n         인증번호: num,\r\n         인증번호확인입력값: ''\r\n      });\r\n     \r\n   }\r\n\r\n\r\n  \r\n    //6-3. 인증번호 입력 온체인지 이벤트 함수 \r\n   const onChangeHpOk=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      let imsi:boolean  = true;\r\n      let {value} = e.target;\r\n      if(value.length >=1){\r\n         imsi = false;\r\n         clearInterval(setId);         \r\n      }\r\n      else {\r\n         imsi = true;\r\n      }\r\n      setState({...state,isHpOkbtnDisabled: imsi, 인증번호확인입력값: Number(value)});\r\n\r\n   }\r\n\r\n    //6-4. 인증번호확인 버튼 클릭 이벤트\r\n    const onClickHpOkBtn=(e: MouseEvent<HTMLButtonElement>)=>{\r\n      e.preventDefault();\r\n      let imsi1:boolean = false;\r\n      let imsi2:boolean = false;\r\n      let imsi3:boolean = true;\r\n      let imsi4:boolean = false;\r\n \r\n      console.log( 인증번호 );\r\n      console.log( 인증번호확인입력값 );\r\n\r\n      if( 인증번호===인증번호확인입력값 ){\r\n         openModal(`인증에 성공 하였습니다.`);\r\n         imsi1 = true; //인증번호 받기 숨기기\r\n         imsi2 = true;  //다른번호 인증 보이기\r\n         imsi3 = false; //인증번호 확인입력상자박스 숨기기\r\n         imsi4 = true;  //인증번호 입력상자사용불가 \r\n         clearInterval( setId );\r\n         //isTimerHp = false\r\n         timerStopHp();\r\n      }\r\n      else{\r\n         openModal(`잘못된 인증 코드입니다.`);\r\n         imsi1 = false;\r\n         imsi2 = false;\r\n         imsi3 = true;\r\n         imsi4 = false;\r\n      }\r\n\r\n      // isHpBtnHide\r\n      setState({\r\n         ...state,\r\n         isHpBtnHide1: imsi1, \r\n         isHpBtnHide2: imsi2, \r\n         isHpBtnHide3: imsi3, \r\n         isHpDisabled: imsi4 \r\n      });     \r\n    }\r\n\r\n\r\n    //6-5. 다른 번호 인증 버튼 클릭 이벤트\r\n    const onClickHp2Btn=(e: MouseEvent<HTMLButtonElement>)=>{\r\n      e.preventDefault();\r\n      setState({\r\n         ...state,\r\n         isHpBtnHide1: false, // 인증번호받기 보이기\r\n         isHpBtnHide2: false, // 다른번호인증 숨기기\r\n         isHpDisabled: false, // HP 입력상자 사용가능\r\n         휴대폰: ''\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //7. 주소1 입력상자 : 세션데이터 가져오기해서 데이테 유지하기\r\n    const onChangeAddress1=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      setState({ ...state, 주소1: e.target.value });\r\n    }\r\n\r\n    //8. 주소2 입력상자\r\n    const onChangeAddress2=(e: ChangeEvent<HTMLInputElement>)=>{\r\n      setState({ ...state, 주소2: e.target.value });\r\n    }\r\n\r\n    //9. 주소검색버튼 클릭 이벤트 : 세션저장된 데이터 가져오기 그리고 주소 데이터 입력상자에 유지하기\r\n    const onClickAddressSearch=(e:MouseEvent<HTMLButtonElement>)=>{\r\n      e.preventDefault();\r\n         const popW: number = 530;\r\n         const popH: number = 615;\r\n         const popName: string  = '_popup_postcode_20221029';\r\n         const popFile: string  = './popup.html';\r\n         let   winW: number     = window.innerWidth;   // 자바스크립트 창너비\r\n         let   winH: number     = window.innerHeight;  // 자바스크립트 창높이\r\n         let   top: number      = (winH-popH)/2; // top  = (창높이-팝업창의높이)/2\r\n         let   left: number     = (winW-popW)/2; // left = (창너비-팝업창의너비)/2\r\n\r\n         window.open( popFile , popName ,`width=${popW}, height=${popH}, top=${top}, left=${left}`);\r\n\r\n         // 부모창 이름 : opener  : opener.입력상자.vallue = '전달내용'\r\n         // 자식창 이름 : winPopup : winPopup.입력상자.value = '전달내용'\r\n\r\n    }\r\n\r\n   // 팝업창에서 저장한 로컬스토레이지 데이터를 가져와서 \r\n   // 비교하고 만약 주소 키 'kurly Address' 가 있다면 유지\r\n   const addressFn=()=>{\r\n      let addressKey: string = 'KURLYADDRESS';\r\n      let obj: any = '';\r\n      for(let i=0; i<sessionStorage.length; i++){\r\n         if( sessionStorage.key(i) === addressKey ){\r\n            obj = JSON.parse(sessionStorage.getItem(addressKey) || \"{}\");\r\n            setState({...state, 주소1:obj.주소1, 주소2:obj.주소2, isAddress: true });            \r\n         }               \r\n      }            \r\n   }\r\n   React.useEffect(()=>{\r\n      addressFn();\r\n   },[주소1,주소2,isAddress]);\r\n\r\n\r\n   // 10. 성별 라디오버튼 이벤트\r\n   const onChangeGender=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      setState({...state, 성별: e.target.value });\r\n   }\r\n\r\n   // 11. 생년월일 체크 함수\r\n   const birthCheck=()=>{\r\n      const regExpYear: RegExp  = /^(?:19(?:2[2-9]|[3-9][0-9])|2[0-9][0-9][0-9])$/g; //1. 생년 (1900~1999) ~ (2000~2999)\r\n      const regExpMonth: RegExp  = /^(?:0?[1-9]|1[0-2])$/g;  //2. 생월 01 .. 09  ~ 10  11  12 const regExpMonth = /^(?:0?[1-9]|10|11|12)$/g;         \r\n      const regExpDate: RegExp   = /^(?:0?[1-9]|1[0-9]|2[0-9]|3[0-1])$/g;       \r\n      const nowYear: number = new Date().getFullYear();  //2022 \r\n\r\n      //1. 생년, 생월, 생일  모두 빈칸이면\r\n      if( 생년==='' &&  생월==='' &&  생일==='' ){\r\n         return;\r\n      }\r\n      else{\r\n         // 생년 빈칸이면\r\n         if( 생년==='' ){\r\n            setState({...state, isBirthGuideText: true, birthGuideText: '태어난 년도 4자리를 정확하게 입력해주세요.'});\r\n         }\r\n         else if( Number(생년) > nowYear ){ //미래년도 2023 ~\r\n            setState({...state, isBirthGuideText: true, birthGuideText: '생년월일이 미래로 입력 되었습니다.'});\r\n         }\r\n         else if( Number(생년) >= nowYear-14 ){ //14미만   20022 ~ 2008\r\n            setState({...state, isBirthGuideText: true, birthGuideText: '만 14세 미만은 가입이 불가합니다.'});\r\n         }\r\n         else if( regExpYear.test( 생년.toString() ) === false ){\r\n            setState({...state, isBirthGuideText: true, birthGuideText: '생년월일을 다시 확인해주세요.'});\r\n         }\r\n         else{\r\n             // 생년이 이상 없으니 다음은 \r\n             // 생월 체크                      \r\n            if( 생월==='' ||  regExpMonth.test(생월.toString()) === false  ){\r\n               setState({...state, isBirthGuideText: true, birthGuideText: '태어난 월을 정확하게 입력해주세요.'});\r\n            }           \r\n            else{\r\n               // 생년 생월 모두 이상 없으니 다음은 \r\n               // 생일 체크                      \r\n               if( 생일==='' ||  regExpDate.test(생일.toString()) === false  ){\r\n                  setState({...state, isBirthGuideText: true, birthGuideText: '태어난 일을 정확하게 입력해주세요.'});\r\n               }           \r\n               else{\r\n                  setState({...state, isBirthGuideText: false, birthGuideText: ''});\r\n               }\r\n            }\r\n         }        \r\n      }\r\n   }\r\n\r\n\r\n   // 상태관리자 변수 생년, 생월, 생일이 렌더링(변경) 되면 함수 실행\r\n   React.useEffect(()=>{\r\n     birthCheck();\r\n   },[생년,생월,생일]);\r\n\r\n\r\n   // 11-1 생년 입력상자 이벤트\r\n   const onChangeYear=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      let imsi = '';     \r\n      const regExpUnNum = /[^0-9]/g; // 숫자가 아닌것\r\n      const {value} = e.target;\r\n      imsi  = value.replace(regExpUnNum,'');\r\n      setState({...state, 생년: imsi });      \r\n  }  \r\n\r\n   // 11-2 생월 입력상자 이벤트\r\n   const onChangeMonth=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      let imsi = '';     \r\n      const regExpUnNum = /[^0-9]/g; // 숫자가 아닌것\r\n      const {value} = e.target;\r\n      imsi  = value.replace(regExpUnNum,'');\r\n      setState({...state, 생월: imsi });\r\n   }\r\n\r\n   // 11-3 생일 입력상자 이벤트\r\n   const onChangeDate=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      let imsi = '';     \r\n      const regExpUnNum = /[^0-9]/g; // 숫자가 아닌것\r\n      const {value} = e.target;\r\n      imsi  = value.replace(regExpUnNum,'');\r\n      setState({...state, 생일: imsi });\r\n   }\r\n\r\n\r\n   // 12-1. 추가입력사항 라디오버튼\r\n   const onChangeAddInputRadio=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      setState({...state, 추가입력사항: e.target.value });\r\n   }\r\n\r\n   // 12-2. 추가입력사항 입력상자\r\n   const onChangeAddInput=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      setState({...state, 추가입력사항입력상자: e.target.value });\r\n   }\r\n\r\n\r\n   // 13-1. 이용약관동의 ALL 체크박스\r\n   // 이용약관동의 에 7개 항목이면 체크\r\n   const onChangeServiceCheckAll=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      let imsi: Array<string> = [];\r\n         \r\n      if( e.target.checked ){\r\n         imsi = 이용약관전체;  // 약관동의 전체 내용을 임시에 저장\r\n      }\r\n      else{\r\n            imsi = [];  //체크 취소하면 선택값 모두 삭제 => 빈 배열사용\r\n      }\r\n\r\n      setState({...state, 이용약관동의: imsi});\r\n   }\r\n\r\n   // 13-2. 이용약관동의 일반(개별) 체크박스\r\n   const onChangeServiceCheck=(e:ChangeEvent<HTMLInputElement>)=>{\r\n      let imsi: Array<any> = [];\r\n      // 체크된것만 저장      \r\n      if(e.target.checked){\r\n\r\n            // #chk4\r\n            // SNS 값 상태배열 변수에 포함되어(includes) 없다면 저장\r\n            // 이메일 값 상태배열 변수에 포함되어(includes) 없다면 저장\r\n            if( e.target.value === '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)' ){           \r\n               if( 이용약관동의.includes('SNS')===false && 이용약관동의.includes('이메일')===false ){\r\n                  setState({...state, 이용약관동의: [...이용약관동의,  '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)','SNS', '이메일'] });\r\n               }\r\n               else if(이용약관동의.includes('SNS')===false && 이용약관동의.includes('이메일')===true){\r\n                  setState({...state, 이용약관동의: [...이용약관동의,  '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)','SNS'] });\r\n               }\r\n               else if(이용약관동의.includes('SNS')===true && 이용약관동의.includes('이메일')===false){\r\n                  setState({...state, 이용약관동의: [...이용약관동의,  '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)','이메일'] });\r\n               }      \r\n            }\r\n            else if(e.target.value==='SNS' && 이용약관동의.includes('이메일')===true ){\r\n               setState({...state, 이용약관동의: [...이용약관동의,  '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)','SNS'] });\r\n            }\r\n            else if(e.target.value==='이메일' && 이용약관동의.includes('SNS')===true ){\r\n               setState({...state, 이용약관동의: [...이용약관동의,  '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)','이메일'] });\r\n            }\r\n            else{  // 나머지\r\n               setState({...state, 이용약관동의: [...이용약관동의, e.target.value] });\r\n            }         \r\n      }\r\n      else{ // 선택 취소하면 현재값은 삭제된다.\r\n\r\n         // #chk4 삭제\r\n         // SNS 값 삭제\r\n         // 이메일 값 삭제\r\n         if( e.target.value === '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)' ){\r\n            imsi = 이용약관동의.filter((item)=>item !== '무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)' );\r\n            imsi = imsi.filter((item)=>item !== 'SNS' );\r\n            imsi = imsi.filter((item)=>item !== '이메일' );\r\n            setState({...state, 이용약관동의: imsi  }); \r\n         }\r\n         else if( e.target.value==='SNS' && 이용약관동의.includes('이메일')===true ){\r\n            imsi = 이용약관동의.filter((item)=>item!=='SNS');\r\n            imsi = imsi.filter((item)=>item!=='무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)');\r\n            setState({...state, 이용약관동의: imsi  }); \r\n         }\r\n         else if( e.target.value==='이메일' && 이용약관동의.includes('SNS')===true ){\r\n            imsi = 이용약관동의.filter((item)=>item!=='이메일');\r\n            imsi = imsi.filter((item)=>item!=='무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)');\r\n            setState({...state, 이용약관동의: imsi  }); \r\n         }\r\n         else{ // 그 외\r\n            imsi = 이용약관동의.filter((item)=>item !== e.target.value);\r\n            setState({...state, 이용약관동의: imsi  });  // 선택 취소 된거는 제외하고 저장\r\n         }       \r\n      }\r\n   }\r\n\r\n   return (\r\n      <main id=\"main\">\r\n            <section id=\"signIn\">\r\n               <div className=\"container\">\r\n                  <div className=\"title\">\r\n                        <h2>회원가입</h2>\r\n                  </div>\r\n                  <div className=\"content\">\r\n                        <form  autoComplete=\"off\"   id='signUp' name='sign_up' method='post' action=\"./response.php\">\r\n                           <ul>\r\n                              <li>\r\n                                    <span>필수입력사항<i>*</i></span>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"id\">아이디<i>*</i></label></div>\r\n                                    <div className=\"right id\">\r\n                                       <input \r\n                                       maxLength={16}\r\n                                       type=\"text\" \r\n                                       id='id' \r\n                                       name='id' \r\n                                       placeholder='아이디를 입력해주세요'\r\n                                       onChange={onChangeId}\r\n                                       value={아이디}\r\n                                       />\r\n                                       <button \r\n                                       type='button' \r\n                                       className='id-ok-btn'\r\n                                       onClick={onClickIdOk}\r\n                                       >중복확인</button>\r\n                                        {/* 정규표현식에서 오류 있으면 isId=true */}\r\n                                       {/* <p className={isId ? `guid-text on`: `guid-text`}>6자 이상 16자 이하의 영문 혹은 영문과 숫자를 조합</p> */}\r\n                                       <p className={`guid-text ${isId && 'on'}`}>6자 이상 16자 이하의 영문 혹은 영문과 숫자를 조합</p>\r\n                                    </div>\r\n                              </li>\r\n\r\n\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"pw\">비밀번호<i>*</i></label></div>\r\n                                    <div className=\"right pw\">\r\n                                       <input \r\n                                       maxLength={16}\r\n                                       type=\"password\" \r\n                                       id='pw' \r\n                                       name='pw' \r\n                                       placeholder='비밀번호를 입력해주세요'\r\n                                       onChange={onChangePw}\r\n                                       value={비밀번호}\r\n                                       />\r\n                                       <p className={`guid-text guid-text1 ${isPwText1 && 'on'}`}>최소 10자 이상 입력</p>\r\n                                       <p className={`guid-text guid-text2 ${isPwText2 && 'on'}`}>영문/숫자/특수문자(공백 제외)만 허용하며, 2개 이상 조합</p>\r\n                                       <p className={`guid-text guid-text3 ${isPwText3 && 'on'}`}>동일한 숫자 3개 이상 연속 사용 불가</p>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"pw2\">비밀번호확인<i>*</i></label></div>\r\n                                    <div className=\"right pw2\">\r\n                                       <input \r\n                                       type=\"password\" \r\n                                       id='pw2' \r\n                                       name='pw2' \r\n                                       placeholder='비밀번호를 한번더 입력해주세요'\r\n                                       onChange={onChangePw2}\r\n                                       value={비밀번호확인}\r\n                                       />\r\n                                       <p className={`guid-text guid-text1 ${isPw2Text1 && 'on'}`}>비밀번호를 한번 더 입력해 주세요.</p>\r\n                                       <p className={`guid-text guid-text2 ${isPw2Text2 && 'on'}`}>동일한 비밀번호를 입력해 주세요.</p>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"name\">이름<i>*</i></label></div>\r\n                                    <div className=\"right name\">\r\n                                       <input \r\n                                       type=\"text\" \r\n                                       id='name' \r\n                                       name='name' \r\n                                       placeholder='이름을 입력해주세요'\r\n                                       onChange={onChangeName}\r\n                                       value={이름}\r\n                                       />\r\n                                       <p className={`guid-text guid-text1 ${isName && 'on'}`}>이름을 입력해 주세요.</p>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"email\">이메일<i>*</i></label></div>\r\n                                    <div className=\"right email\">\r\n                                       <input \r\n                                       type=\"email\" \r\n                                       id='email' \r\n                                       name='email' \r\n                                       placeholder='예: markerkurly@kurly.com'\r\n                                       onChange={onChangeEmail}\r\n                                       value={이메일}\r\n                                       />\r\n                                       <button \r\n                                       type='button' \r\n                                       className='email-ok-btn'\r\n                                       onClick={onClickEmailOk}\r\n                                       >중복확인</button>\r\n                                       <p className={`guid-text guid-text1 ${isEmailText1 && 'on'}`}>이메일을 입력해 주세요.</p>\r\n                                       <p className={`guid-text guid-text2 ${isEmailText2 && 'on'}`}>이메일 형식으로 입력해 주세요.</p>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"hp\">휴대폰<i>*</i></label></div>\r\n                                    <div className=\"right hp\">\r\n                                       <input \r\n                                       maxLength={11}\r\n                                       type=\"text\" \r\n                                       id='hp' \r\n                                       name='hp' \r\n                                       placeholder='숫자만 입력해주세요'\r\n                                       onChange={onChangeHp}\r\n                                       value={휴대폰}\r\n                                       disabled={isHpDisabled}\r\n                                       />\r\n                                       <button \r\n                                       type='button' \r\n                                       className={`hp-btn ${ isHpBtnHide1 && 'hide'} ${ isHpBtn && 'on'}`} \r\n                                       disabled={isHpBtnDisabled}\r\n                                       onClick={onClickHpBtn}\r\n                                       >인증번호 받기</button>\r\n\r\n                                       <button \r\n                                       type='button' \r\n                                       className={`hp2-btn ${isHpBtnHide2 && 'show'}`}\r\n                                       onClick={onClickHp2Btn}\r\n                                       >다른번호 인증</button>\r\n                                       <p className={`guid-text guid-text1 ${isHpGuidText1 && 'on'}`}>휴대폰 번호를 입력해 주세요.</p>\r\n                                       <p className={`guid-text guid-text2 ${isHpGuidText2 && 'on'}`}>휴대폰 번호 형식으로 입력해 주세요.</p>\r\n                                    </div>\r\n                              </li>\r\n                              \r\n                              <li className={`hp-ok-box ${isHpBtnHide3 && 'on'}`}>\r\n                                    <div className=\"left\"><label htmlFor=\"hp\" className='hide'>휴대폰 인증번호 확인</label></div>\r\n                                    <div className=\"right hp-ok\">\r\n                                       <input \r\n                                       maxLength={6} \r\n                                       type=\"text\" \r\n                                       id='hpOk' \r\n                                       name='hpOk' \r\n                                       placeholder='인증번호를 입력해주세요'\r\n                                       onChange={onChangeHpOk}\r\n                                       />\r\n                                       <span className='hp-ok-time'><em className='minutes'>{분<10 ? `0${분}`: 분 }</em>:<em className='seconds'>{초<10 ? `0${초}`:초 }</em></span>\r\n                                       <button \r\n                                       type='button' \r\n                                       className='hp-ok-btn on' \r\n                                       disabled={isHpOkbtnDisabled}\r\n                                       onClick={onClickHpOkBtn}\r\n                                       >인증번호 확인</button>\r\n                                       <p className='guid-text guid-text1'>                                    \r\n                                          인증번호가 오지 않는다면, 통신사 스팸 차단 서비스 혹은 휴대폰 번호 차단 여부를 확인해주세요. (마켓컬리 1644-1107)\r\n                                       </p>\r\n                                    </div>\r\n                              </li>\r\n\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"addr2\">주소<i>*</i></label></div>\r\n                                    <div className=\"right addr\">\r\n                                       <button \r\n                                       type='button' \r\n                                       className={`addr-search-btn${isAddress ? 'on' : ''}`}\r\n                                       onClick={onClickAddressSearch}\r\n                                       ><img src=\"./img/search.svg\" alt=\"\"/>주소검색</button>\r\n                                       <input \r\n                                       type=\"text\" \r\n                                       id='addr1' \r\n                                       name='addr1' \r\n                                       className={`${isAddress ? 'on' : ''}`}\r\n                                       placeholder='주소검색 주소 입력'\r\n                                       onChange={onChangeAddress1}\r\n                                       value={주소1}\r\n                                       />\r\n                                       <input \r\n                                       type=\"text\" \r\n                                       id='addr2' \r\n                                       name='addr2' \r\n                                       className={`${isAddress ? 'on' : ''}`}\r\n                                       placeholder='나머지 주소를 입력해주세요'\r\n                                       onChange={onChangeAddress2}\r\n                                       value={주소2}\r\n                                       />\r\n                                       <button \r\n                                       type='button' \r\n                                       className={`addr-research-btn ${isAddress ? 'on': ''}`}\r\n                                       onClick={onClickAddressSearch}\r\n                                       ><img src=\"./img/search.svg\" alt=\"\"/>재검색</button>\r\n                                       <p>배송지에 따라 상품 정보가 달라질 수 있습니다.</p>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\">\r\n                                       <label>성별</label>\r\n                                    </div>\r\n                                    <div className=\"right gender\">\r\n                                       <label>\r\n                                          <input \r\n                                          type=\"radio\" \r\n                                          id='male'     \r\n                                          className='gender-btn' \r\n                                          name='gender' \r\n                                          value='남자'\r\n                                          onChange={onChangeGender}\r\n                                          checked={성별.includes('남자')}\r\n                                          />남자</label>\r\n                                       <label>\r\n                                          <input \r\n                                          type=\"radio\" \r\n                                          id='female'   \r\n                                          className='gender-btn' \r\n                                          name='gender' \r\n                                          value='여자'\r\n                                          onChange={onChangeGender}\r\n                                          checked={성별.includes('여자')}\r\n                                          />여자</label>\r\n                                       <label>\r\n                                          <input \r\n                                          type=\"radio\" \r\n                                          id='unselect' \r\n                                          className='gender-btn' \r\n                                          name='gender' \r\n                                          value='선택안함'\r\n                                          onChange={onChangeGender}\r\n                                          checked={성별.includes('선택안함')===true?true:false}                               \r\n                                          />선택안함</label>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"\">생년월일</label></div>\r\n                                    <div className=\"right birth-day\">\r\n                                       <ul>\r\n                                          <li>\r\n                                             <input \r\n                                             type=\"text\" \r\n                                             maxLength={4} \r\n                                             id='year' \r\n                                             name='year' \r\n                                             placeholder='YYYY'\r\n                                             onChange={onChangeYear}\r\n                                             value={생년}\r\n                                             />\r\n                                          </li>\r\n                                          <li><i>/</i></li>\r\n                                          <li>\r\n                                             <input \r\n                                             type=\"text\" \r\n                                             maxLength={2}\r\n                                             id='month' \r\n                                             name='month' \r\n                                             placeholder='MM'\r\n                                             onChange={onChangeMonth}\r\n                                             value={생월}\r\n                                             />\r\n                                          </li>\r\n                                          <li><i>/</i></li>\r\n                                          <li>\r\n                                             <input \r\n                                             type=\"text\" \r\n                                             maxLength={2}\r\n                                             id='date' \r\n                                             name='date' \r\n                                             placeholder='DD'\r\n                                             onChange={onChangeDate}\r\n                                             value={생일}\r\n                                             />\r\n                                          </li>\r\n                                       </ul>\r\n                                       <p className={`${isBirthGuideText ? 'on': ''}`}>{birthGuideText}</p>\r\n                                    </div>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"\">추가입력사항</label></div>\r\n                                    <div className=\"right gender add-input\">\r\n                                       \r\n                                       <div className=\"add-input-box\">\r\n                                          <label>\r\n                                             <input \r\n                                             type=\"radio\" \r\n                                             id='addId'    \r\n                                             className='add-input-btn' \r\n                                             name='add_input' \r\n                                             value='추천인 아이디'\r\n                                             onChange={onChangeAddInputRadio}\r\n                                             checked={추가입력사항.includes('추천인 아이디')}\r\n                                             />추천인 아이디\r\n                                          </label>\r\n                                          <label>\r\n                                             <input \r\n                                             type=\"radio\" \r\n                                             id='addEvent' \r\n                                             className='add-input-btn' \r\n                                             name='add_input' \r\n                                             value='참여 이벤트명'\r\n                                             onChange={onChangeAddInputRadio}\r\n                                             checked={추가입력사항.includes('참여 이벤트명')}\r\n                                             />참여 이벤트명\r\n                                          </label>\r\n                                       </div>\r\n                                       \r\n                                       <input \r\n                                       type=\"text\" \r\n                                       id='choocheon' \r\n                                       className='add-input-event' \r\n                                       name='choocheon' \r\n                                       placeholder='추천인 아이디를 입력해주세요'\r\n                                       onChange={onChangeAddInput}\r\n                                       value={추가입력사항입력상자}\r\n                                       />\r\n                                       <p>\r\n                                          추천인 아이디와 참여 이벤트명 중 하나만 선택 가능합니다.<br/>\r\n                                          가입 이후는 수정이 불가능 합니다.<br/>\r\n                                          대소문자 및 띄어쓰기에 유의해주세요.\r\n                                       </p>\r\n\r\n                                    </div>\r\n                              </li>\r\n                              <li className='hr'>\r\n                                 <hr/>\r\n                              </li>\r\n                              <li>\r\n                                    <div className=\"left\"><label htmlFor=\"addr2\">이용약관동의<i>*</i></label></div>\r\n                                    <div className=\"right service\">\r\n                                       <ul>\r\n                                          <li>\r\n                                                <label>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chkAll' \r\n                                                   name='chk_all' \r\n                                                   value='전체동의합니다.'\r\n                                                   onChange={onChangeServiceCheckAll}\r\n                                                   checked={이용약관동의.length>=7}\r\n                                                   />전체동의합니다\r\n                                                </label>\r\n                                                <p>선택항목에 동의하지 않은 경우도 회원가입 및 일반적인 서비스를 이용할 수 있습니다.</p>\r\n                                          </li>\r\n                                          <li>\r\n                                                <label className='after'>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk1' \r\n                                                   name='chk1' \r\n                                                   className='check-service' \r\n                                                   value='이용약관 동의(필수)'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('이용약관 동의(필수)')}\r\n                                                   />이용약관 동의\r\n                                                </label>\r\n                                                <em>(필수)</em>\r\n                                                <span className='more-view'>약관보기 <img src=\"./img/arrow.svg\" alt=\"\"/></span>\r\n                                          </li>\r\n                                          <li>\r\n                                                <label className='after'>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk2' \r\n                                                   name='chk2' \r\n                                                   className='check-service' \r\n                                                   value='개인정보 수집∙이용 동의(필수)'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('개인정보 수집∙이용 동의(필수)')}\r\n                                                   />개인정보 수집∙이용 동의\r\n                                                </label>\r\n                                                <em>(필수)</em>\r\n                                                <span className='more-view'>약관보기 <img src=\"./img/arrow.svg\" alt=\"\"/></span>\r\n                                          </li>\r\n                                          <li>\r\n                                                <label className='after'>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk3' \r\n                                                   name='chk3' \r\n                                                   className='check-service' \r\n                                                   value='개인정보 수집∙이용 동의(선택)'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('개인정보 수집∙이용 동의(선택)')}\r\n                                                   />개인정보 수집∙이용 동의\r\n                                                </label>\r\n                                                <em>(선택)</em>\r\n                                                <span className='more-view'>약관보기 <img src=\"./img/arrow.svg\" alt=\"\"/></span>\r\n                                          </li>\r\n                                          <li>\r\n                                                <label className='after'>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk4' \r\n                                                   name='chk4' \r\n                                                   className='check-service sns-check-all' \r\n                                                   value='무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)')}\r\n                                                   />무료배송, 할인쿠폰 등 혜택/정보 수신 동의\r\n                                                </label>\r\n                                                <em>(선택)</em>\r\n                                          </li>\r\n                                          <li>\r\n                                                <label>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk5' \r\n                                                   name='chk5' \r\n                                                   className='check-service sns-check' \r\n                                                   value='SNS'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('SNS')}\r\n                                                   />SNS\r\n                                                </label>                                        \r\n                                                <label>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk6' \r\n                                                   name='chk6' \r\n                                                   className='check-service sns-check' \r\n                                                   value='이메일'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('이메일')}\r\n                                                   />이메일\r\n                                                </label>                                        \r\n                                          </li>\r\n                                          <li>\r\n                                                <p>동의 시 한 달간 [5%적립] + [2만원 이상 무료배송] 첫 주문 후 안내</p>\r\n                                          </li>\r\n                                          <li> \r\n                                                <label className='after'>\r\n                                                   <input \r\n                                                   type=\"checkbox\" \r\n                                                   id='chk7' \r\n                                                   name='chk7' \r\n                                                   className='check-service' \r\n                                                   value='본인은 만 14세 이상입니다(필수)'\r\n                                                   onChange={onChangeServiceCheck}\r\n                                                   checked={이용약관동의.includes('본인은 만 14세 이상입니다(필수)')}\r\n                                                   />본인은 만 14세 이상입니다.\r\n                                                </label>\r\n                                                <em>(필수)</em>\r\n                                          </li>\r\n                                       </ul>\r\n                                    </div>\r\n                              </li>\r\n                              \r\n                           </ul>\r\n                           <div className=\"submit\">\r\n                              <button type=\"submit\" className='submit-btn'>가입하기</button>\r\n                           </div>\r\n                        </form>\r\n                  </div>\r\n               </div>\r\n            </section>\r\n      </main>\r\n   );\r\n};\r\n\r\n\r\n// 회원관리 컴포넌트 기본 프롭스 관리\r\nMainComponent.defaultProps = {\r\n   회원관리 : {\r\n      아이디: '',\r\n      아이디중복확인: false,\r\n      isId: false,\r\n\r\n      비밀번호: '',\r\n      isPwText1: false,\r\n      isPwText2: false,\r\n      isPwText3: false,\r\n\r\n      비밀번호확인: '',\r\n      isPw2Text1: false,\r\n      isPw2Text2: false,\r\n      \r\n      이름: '',\r\n      isName: false,\r\n\r\n      이메일: '',\r\n      isEmailText1: false,\r\n      isEmailText2: false,\r\n      이메일중복확인: false,\r\n\r\n      휴대폰: '',\r\n      isHpBtn: false,            // 인증번호 받기버튼 활성화 보라 색상으로 변경\r\n      isHpBtnDisabled: true,     // 인증번호 받기버튼 disabled = true 사용불가  / disabled = false 사용가\r\n      isHpBtnHide1: false,       // 인증번호 받기버튼 false 보이기  true 숨기기 \r\n      isHpBtnHide2: false,        // 다른인증번호 버튼 false 숨기기 true 보이기\r\n      isHpBtnHide3: false,        // 인증번호 확인박스 false 숨기기  true 보이기 \r\n      isHpOkbtnDisabled: true,   // 인증번호 확인버튼 disabled = true 사용불가  / disabled = false 사용가\r\n      isHpGuidText1: false,      // 인증번호 입력상자 아래 안내 텍스트 빈값인경우\r\n      isHpGuidText2: false,      // 인증번호 입력상자 아래 안내 텍스트 정규표현식 true & false 경우\r\n      인증번호: 0,\r\n      인증번호확인입력값: 0,\r\n      isHpDisabled: false,\r\n      분: 2,\r\n      초: 59,\r\n      isTimerStart: false,\r\n      setId: 0,\r\n\r\n\r\n      주소1: '',\r\n      주소2: '',\r\n      isAddress: false,\r\n\r\n      성별: '선택안함',\r\n\r\n      생년: '',\r\n      생월: '',\r\n      생일: '',\r\n      isBirthGuideText: false,  // 가이드 텍스트 표시 여부\r\n      birthGuideText: '',       // 가이드 텍스트\r\n\r\n      추가입력사항:'',\r\n      추가입력사항입력상자:'',\r\n      이용약관동의: [],\r\n      이용약관전체 : [\r\n         \"이용약관 동의(필수)\",\r\n         \"개인정보 수집∙이용 동의(필수)\",\r\n         \"개인정보 수집∙이용 동의(선택)\",\r\n         \"무료배송, 할인쿠폰 등 혜택/정보 수신 동의(선택)\",\r\n         \"SNS\",\r\n         \"이메일\",\r\n         \"본인은 만 14세 이상입니다(필수)\"\r\n      ]\r\n      \r\n   }\r\n}\r\n\r\nexport default MainComponent;","C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\MemberModalComponent.tsx",[],[],"C:\\Users\\user\\Desktop\\1212_리액트_CRA_마켓컬리_회원가입폼_타입스크립트\\src\\components\\FooterComponent.tsx",[],[],{"ruleId":"44","severity":1,"message":"45","line":69,"column":17,"nodeType":"46","messageId":"47","endLine":69,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":76,"column":43,"nodeType":"46","messageId":"47","endLine":76,"endColumn":50},{"ruleId":"44","severity":1,"message":"49","line":81,"column":45,"nodeType":"46","messageId":"47","endLine":81,"endColumn":57},{"ruleId":"50","severity":1,"message":"51","line":368,"column":7,"nodeType":"52","endLine":368,"endColumn":18,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":520,"column":6,"nodeType":"52","endLine":520,"endColumn":25,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"56","line":577,"column":6,"nodeType":"52","endLine":577,"endColumn":16,"suggestions":"57"},"@typescript-eslint/no-unused-vars","'아이디중복확인' is assigned a value but never used.","Identifier","unusedVar","'이메일중복확인' is assigned a value but never used.","'isTimerStart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'timerCount'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook React.useEffect has a missing dependency: 'addressFn'. Either include it or remove the dependency array.",["59"],"React Hook React.useEffect has a missing dependency: 'birthCheck'. Either include it or remove the dependency array.",["60"],{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [isTimerHp, timerCount]",{"range":"67","text":"68"},"Update the dependencies array to be: [주소1, 주소2, isAddress, addressFn]",{"range":"69","text":"70"},"Update the dependencies array to be: [birthCheck, 생년, 생월, 생일]",{"range":"71","text":"72"},[11265,11276],"[isTimerHp, timerCount]",[15907,15926],"[주소1, 주소2, isAddress, addressFn]",[18232,18242],"[birthCheck, 생년, 생월, 생일]"]